<article class="flex flex-col items-start justify-between">
  <div class="w-full relative">
    <img
      src="https://images.unsplash.com/photo-1547586696-ea22b4d4235d?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=3270&amp;q=80"
      alt="" class="w-full aspect-video lg:aspect-[3/2] sm:aspect-[2] object-cover bg-gray-100 rounded-2xl ">
    <div class="ring rounded-2xl inset-0 absolute ring-inset ring-[#1118271a]"></div>
  </div>
  <div class="max-w-2xl">
    <div class="flex items-center gap-x-4 text-xs mt-8">
      <time class="text-gray-500">{{ new Date(post.createdAt).toLocaleDateString("pt-BR", {
        year: "numeric",
        month: "long",
        day: "numeric",
        }) }}</time>
      <a href="#"
        class="relative rounded-full bg-gray-50 px-3 py-1.5 font-medium text-gray-600 hover:bg-gray-100">Marketing</a>
    </div>
    <div class="group relative">
      <h3 class="mt-3 text-lg font-semibold leading-6 text-gray-900 group-hover:text-gray-600">
        <a href="{{ route('posts.index', { id: post.id }) }}">
          <span class="absolute inset-0"></span>
          {{ post.title }}
        </a>
      </h3>
      <p class="mt-5 line-clamp-3 text-sm leading-6 text-gray-600">{{ post.content }}</p>
    </div>
    <div class="w-full flex items-end justify-between mt-8">
      <div class="relative mt-8 flex items-center gap-x-4">
        <span class="bg-gray-100 rounded-full overflow-hidden w-14 h-14 inline-block">
          <svg class="w-full text-gray-300 h-full" fill="currentColor" viewBox="0 0 24 24">
            <path
              d="M24 20.993V24H0v-2.996A14.977 14.977 0 0112.004 15c4.904 0 9.26 2.354 11.996 5.993zM16.002 8.999a4 4 0 11-8 0 4 4 0 018 0z">
            </path>
          </svg>
        </span>
        <div class="text-sm leading-6">
          <p class="font-semibold text-gray-900">
            <a href="{{ route('users.index', { id: post.creatorUserId }) }}">
              <span class="absolute inset-0"></span>
              {{ post.creatorUser.name }} {{ post.creatorUser.lastName }}
            </a>
          </p>
          <p class="text-gray-600">Descrição</p>
        </div>
      </div>
      <div class="mr-5 flex items-center">
        @if(auth.isAuthenticated)
        <i id="heart-{{ post.id }}" @click="like('{{ route('posts.like', { id: post.id }) }}')"
          class="position relative top-[.08rem] bi {{ await post.liked(auth.user) ? 'bi-heart-fill text-red-400' : 'bi-heart' }} ml-1 hover:text-red-500 cursor-pointer"></i>
        <span id="heart-count" class="text-xs ml-1" x-show="{{ post.$extras.usersLike_count }}">{{
          post.$extras.usersLike_count }}</span>
        <i id="star-{{ post.id }}" @click="favorite('{{ route('posts.favorite.create', { id: post.id }) }}')"
          class="bi {{ await post.favorited(auth.user) ? 'bi-star-fill text-yellow-400' : 'bi-star' }} ml-1 hover:text-yellow-400 cursor-pointer"></i>
        @end
        <a href="{{ route('posts.index', { id: post.id }) }}"
          class="bi bi-chat ml-1 hover:text-blue-500 cursor-pointer"></a>
        <span class="text-xs ml-1" x-show="{{ post.$extras.comments_count }}">{{ post.$extras.comments_count }}</span>
      </div>
    </div>
  </div>
</article>
<script>
  async function favorite(url) {
    const response = await fetch(url)
    const data = await response.json()
    const favoriteButton = document.getElementById('star-{{ post.id }}')

    animation('star-{{ post.id }}')

    if (data.favorited) {
      favoriteButton.classList.remove('bi-star')
      favoriteButton.classList.add('bi-star-fill')
      favoriteButton.classList.add('text-yellow-400')
    } else {
      favoriteButton.classList.remove('bi-star-fill')
      favoriteButton.classList.add('bi-star')
      favoriteButton.classList.remove('text-yellow-400')
    }
  }

  async function like(url) {
    const response = await fetch(url)
    const data = await response.json()
    const likeButton = document.getElementById('heart-{{ post.id }}')
    const heartCount = document.getElementById('heart-count')

    animation('heart-{{ post.id }}')

    if (data.liked) {
      likeButton.classList.remove('bi-heart')
      likeButton.classList.add('bi-heart-fill')
      likeButton.classList.add('text-red-400')
      heartCount.style.display = 'block'
      heartCount.innerHTML = Number(heartCount.innerHTML) + 1
    } else {
      likeButton.classList.remove('bi-heart-fill')
      likeButton.classList.add('bi-heart')
      likeButton.classList.remove('text-red-400')
      heartCount.innerHTML = Number(heartCount.innerHTML) - 1
      if (heartCount.innerHTML == '0')
        heartCount.style.display = 'none'
    }
  }

  function animation(id) {
    const heartElement = document.getElementById(id)
    heartElement.classList.add('animate-likeAnimation')
    setTimeout(function () {
      heartElement.classList.remove('animate-likeAnimation')
    }, 900)
  }
</script>
